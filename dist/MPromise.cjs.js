/**
 * @Version 0.1.0
 * @Author: ta7sudan
 * @Repo: https://github.com/ta7sudan/MPromise#readme
 * @License: MIT
 */'use strict';Object.defineProperty(exports,"__esModule",{value:!0});const _status=Symbol("status"),_value=Symbol("value"),_subs=Symbol("subs"),_notify=Symbol("notify"),_depend=Symbol("depend"),_resolve=Symbol("resolve"),setValueAndStatus=Symbol("setValueAndStatus");function runAsync(a){process&&process.nextTick?process.nextTick(a):setTimeout(a,0)}class MPromise{constructor(a){if(this[_value]=void 0,this[_status]=0,this[_subs]=[],a){let b=!1;const c=a=>{b||(b=!0,MPromise[_resolve](this,a))},d=a=>{b||(b=!0,this[setValueAndStatus](a,2))};try{a(c,d)}catch(a){b||this[setValueAndStatus](a,2)}}}static[_resolve](a,b){if(0===a[_status])if(a===b)a[setValueAndStatus](new TypeError("promise is same as x"),2);else if(b instanceof MPromise)0===b[_status]?b[_depend](c=>{a[setValueAndStatus](b[_value],c)}):a[setValueAndStatus](b[_value],b[_status]);else if("[object Object]"===Object.prototype.toString.call(b)||"function"==typeof b){let c=null;try{c=b.then}catch(b){return void a[setValueAndStatus](b,2)}if("function"==typeof c){let d=!1;const e=c=>{if(!d)return d=!0,b===c?void a[setValueAndStatus](new TypeError("cycle thenable"),2):void MPromise[_resolve](a,c)},f=b=>{d||(d=!0,a[setValueAndStatus](b,2))};try{c.call(b,e,f)}catch(b){d||a[setValueAndStatus](b,2)}}else a[setValueAndStatus](b,1)}else a[setValueAndStatus](b,1)}static resolve(a){return a instanceof MPromise?a:new MPromise(b=>b(a))}static reject(a){return a instanceof MPromise?a:new MPromise((b,c)=>c(a))}[setValueAndStatus](a,b){0===this[_status]&&(this[_value]=a,this[_status]=b,this[_notify]())}[_depend](a){this[_subs].push(a)}[_notify](){runAsync(()=>{for(;this[_subs].length;)this[_subs].shift()(this[_status])})}then(a,b){return new MPromise((c,d)=>{this[_depend](e=>{if(1===e){if("function"==typeof a)try{const b=a.call(void 0,this[_value]);c(b)}catch(a){d(a)}else c(this[_value]);}else if("function"==typeof b)try{const a=b.call(void 0,this[_value]);c(a)}catch(a){d(a)}else d(this[_value])}),0!==this[_status]&&this[_notify]()})}}const resolve=MPromise[_resolve];function reject(a,b){a[setValueAndStatus](b,2)}exports.MPromise=MPromise,exports.resolve=resolve,exports.reject=reject;
//# sourceMappingURL=MPromise.cjs.js.map
